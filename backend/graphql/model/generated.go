// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

// Represents an individual article/post from a feed
type Article struct {
	// Unique identifier for the article
	ID string `json:"id"`
	// ID of the feed this article belongs to
	FeedID string `json:"feedId"`
	// GUID from the RSS/Atom feed (unique identifier from feed)
	GUID string `json:"guid"`
	// Title of the article
	Title string `json:"title"`
	// URL/link to the original article
	URL string `json:"url"`
	// Whether the article has been marked as read
	IsRead bool `json:"isRead"`
	// The feed this article belongs to
	Feed *Feed `json:"feed"`
}

// Authentication payload returned from login mutation
type AuthPayload struct {
	// The authenticated user
	User *User `json:"user"`
}

// Represents a feed subscription in the system
type Feed struct {
	// Unique identifier for the feed
	ID string `json:"id"`
	// URL of the RSS/Atom feed
	URL string `json:"url"`
	// Title of the feed (extracted from feed metadata)
	Title string `json:"title"`
	// Timestamp when the feed was last fetched
	FetchedAt string `json:"fetchedAt"`
	// Whether the user is currently subscribed to this feed
	IsSubscribed bool `json:"isSubscribed"`
	// Articles belonging to this feed
	Articles []*Article `json:"articles"`
}

// Root mutation type for modifying data
type Mutation struct {
}

// Root query type for reading data
type Query struct {
}

// Represents a user in the system
type User struct {
	// Unique identifier for the user
	ID string `json:"id"`
	// Username of the user
	Username string `json:"username"`
}
